---
title: "Class 14"
author: "Marina Puffer (PID: A16341339)"
format: pdf
---

# Section 1. Differential Expression Analysis
```{r}
library(DESeq2)
```
## Data import
```{r}
metaFile <- "GSE37704_metadata.csv"
countFile <- "GSE37704_featurecounts.csv"

# Import metadata and take a peak
colData = read.csv(metaFile, row.names=1)
head(colData)
```
```{r}
# Import countdata
countData = read.csv(countFile, row.names=1)
head(countData)
```

## Q. Complete the code below to remove the troublesome first column from countData 
```{r}
# Note we need to remove the odd first $length col
countData <- as.matrix(countData[,-1])
head(countData)
```

## Q. Complete the code below to filter countData to exclude genes (i.e. rows) where we have 0 read count across all samples (i.e. columns).
```{r}
# Filter count data where you have 0 read count across all samples.
rowsums <- rowSums(countData)
zero <- rowsums == 0
countData =  countData[!zero, ]
head(countData)
```
How many genes left?
```{r}
nrow(countData)
```


# Running DESeq2
```{r}
dds = DESeqDataSetFromMatrix(countData=countData,
                             colData=colData,
                             design=~condition)
dds = DESeq(dds)
```
```{r}
dds
```
```{r}
res = results(dds, contrast=c("condition", "hoxa1_kd", "control_sirna"))
```

## Q. Call the summary() function on your results to get a sense of how many genes are up or down-regulated at the default 0.1 p-value cutoff.
```{r}
summary(res)
```

# Volcano plot
```{r}
plot(res$log2FoldChange, -log(res$padj))
```

## Q. Improve this plot by completing the below code, which adds color and axis labels
```{r}
# Make a color vector for all genes
mycols <- rep("gray", nrow(res) )

# Color red the genes with absolute fold change above 2
mycols[ abs(res$log2FoldChange) > 2 ] <- "red"

# Color blue those with adjusted p-value less than 0.01
#  and absolute fold change more than 2
inds <- (abs(res$padj)<0.1) & (abs(res$log2FoldChange) > 2 )
mycols[ inds ] <- "blue"

plot( res$log2FoldChange, -log(res$padj), col=mycols, xlab="Log2(FoldChange)", ylab="-Log(P-value)" )
```

# Adding gene annotation

## Q. Use the mapIDs() function multiple times to add SYMBOL, ENTREZID and GENENAME annotation to our results by completing the code below.
```{r}
library("AnnotationDbi")
library("org.Hs.eg.db")

columns(org.Hs.eg.db)

res$symbol = mapIds(org.Hs.eg.db,
                    keys=row.names(res), 
                    keytype="ENSEMBL",
                    column="SYMBOL",
                    multiVals="first")

res$entrez = mapIds(org.Hs.eg.db,
                    keys=rownames(res),
                    keytype="ENSEMBL",
                    column="ENTREZID",
                    multiVals="first")

res$name =   mapIds(org.Hs.eg.db,
                    keys=row.names(res),
                    keytype="ENSEMBL",
                    column="GENENAME",
                    multiVals="first")

head(res, 10)
```

## Q. Finally for this section let's reorder these results by adjusted p-value and save them to a CSV file in your current project directory.
```{r}
res = res[order(res$pvalue),]
write.csv(res, file="deseq_results.csv")
```

# Section 2: Pathway Analysis

```{r}
library(pathview)
```

```{r}
library(gage)
library(gageData)

data(kegg.sets.hs)
data(sigmet.idx.hs)

# Focus on signaling and metabolic pathways only
kegg.sets.hs = kegg.sets.hs[sigmet.idx.hs]

# Examine the first 3 pathways
head(kegg.sets.hs, 3)
```

The main `gage()` function requires a named vector of fold changes:
```{r}
foldchanges = res$log2FoldChange
names(foldchanges) = res$entrez
head(foldchanges)
```

Run the `gage` pathway analysis
```{r}
# Get the results
keggres = gage(foldchanges, gsets=kegg.sets.hs)
```
Look at the results:
```{r}
attributes(keggres)
```

```{r}
# Look at the first few down (less) pathways
head(keggres$less)
```
Now we can use `pathview()` to make a pathway plot with the RNA-seq expression results showin in color. 

```{r}
pathview(gene.data=foldchanges, pathway.id="hsa04110")
```
```{r}
#![](hsa04110.pathview.png)
```

![](hsa04110.pathview.png)


Can play with other input arguments in `pathview()` to change the display in various ways:
```{r}
# A different PDF based output of the same data
pathview(gene.data=foldchanges, pathway.id="hsa04110", kegg.native=FALSE)
```

Can also pull out top 5 upregulated pathways
```{r}
## Focus on top 5 upregulated pathways here for demo purposes only
keggrespathways <- rownames(keggres$greater)[1:5]

# Extract the 8 character long IDs part of each string
keggresids = substr(keggrespathways, start=1, stop=8)
keggresids
```
Pass those IDs in `keggresids` to the pathview function to draw plots for all the top 5 pathways
```{r}
pathview(gene.data=foldchanges, pathway.id=keggresids, species="hsa")

```
![](hsa04640.pathview.png)
![](hsa04630.pathview.png)
![](hsa00140.pathview.png)
![](hsa04330.pathview.png)

## Q. Can you do the same procedure as above to plot the pathview figures for the top 5 down-reguled pathways?
```{r}
## Focus on top 5 downregulated pathways 
keggrespathwaysdown <- rownames(keggres$less)[1:5]

# Extract the 8 character long IDs part of each string
keggresidsdown = substr(keggrespathwaysdown, start=1, stop=8)
keggresidsdown
```

```{r}
pathview(gene.data=foldchanges, pathway.id=keggresidsdown, species="hsa")
```
![hsa03030](hsa03030.pathview.png)
![hsa03013](hsa03013.pathview.png)
![hsa03440](hsa03440.pathview.png)
![hsa04114](hsa04114.pathview.png)
![hsa04110](hsa04110.pathview.png)

# Section 3: Gene Ontology (GO)
```{r}
data(go.sets.hs)
data(go.subs.hs)

# Focus on Biological Process subset of GO
gobpsets = go.sets.hs[go.subs.hs$BP]

gobpres = gage(foldchanges, gsets=gobpsets, same.dir=TRUE)

lapply(gobpres, head)
```

# Section 4. Reactome Analysis
Reactome is a database consisting of biological molecules and their relation to pathways and processes. 
We can conduct over-representation enrichment analysis and pathway-topology analysis Reactome using the previous list of significant genes generated from the differential expression results above. 
First output the list of significant genes at the 0.05 level as a plain text file:
```{r}
sig_genes <- res[res$padj <= 0.05 & !is.na(res$padj), "symbol"]
print(paste("Total number of significant genes:", length(sig_genes)))
```
```{r}
write.table(sig_genes, file="significant_genes.txt", row.names=FALSE, col.names=FALSE, quote=FALSE)
```

This file is inputted into the website: "https://reactome.org/PathwayBrowser/#TOOL=AT". 
Parameters set to "Project to Humans", then analyzed. 

## Q: What pathway has the most significant “Entities p-value”? Do the most significant pathways listed match your previous KEGG results? What factors could cause differences between the two methods?
Cell Cycle, Mitotic has the most significant Entities p-value. This somewhat matches the KEGG results. For example, cell cycle is the most downregulated pathway shown in the KEGG analysis. However, many of the other significant up or downregulated pathways, such as DNA replication and Jak-STAT signaling do not appear in the top of reactome's list of significant p-values. Rather, some other pathways in gene expression and signaling are highlighted as significant, so the discrepancy might be due to the data being pulled from different sources that use different names to describe similar pathways. 

```{r}
head(keggres$less)
```
```{r}
head(keggres$greater)
```

